input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
###
type Usuario @model {
  id: ID!

  nickname: String!
  nombre: String
  materno: String
  paterno: String

  email: String!
  foto: String
  imagenFondo: String

  phoneNumber: String
  phoneCode: String

  organizador: Boolean
  admin: Boolean

  idUploaded: Boolean
  idData: AWSJSON
  idKey: String

  fechaNacimiento: String

  calificacion: Float
  numResenas: Int

  notificationToken: String

  Eventos: [Evento] @hasMany(indexName: "byUsuario", fields: ["id"])
  Reservas: [Reserva] @hasMany(indexName: "byUsuario", fields: ["id"])
}

type Evento @model {
  id: ID!

  imagenes: [AWSJSON!]!

  titulo: String!
  detalles: String

  ubicacion: AWSJSON!
  fechaInicial: AWSTimestamp!
  fechaFinal: AWSTimestamp!

  boletos: [AWSJSON!]!

  tosAceptance: AWSJSON!

  tipoLugar: placeEnum!
  musica: musicEnum!
  comodities: [comoditiesEnum!]

  musOtra: String

  CreatorID: ID! @index(name: "byUsuario")
  Creator: Usuario @belongsTo

  Reservas: [Reserva!] @hasMany(indexName: "byEvento", fields: ["id"])
}

type Reserva @model {
  id: ID!

  total: Float!
  precioIndividual: Float!

  comision: Float!
  pagadoAlOrganizador: Float!

  tituloBoleto: String!
  descripcionBoleto: String

  cantidad: Int!

  pagoID: String

  ingreso: Boolean
  horaIngreso: AWSDateTime

  cancelado: Boolean
  canceledAt: AWSDateTime
  cancelReason: reservaCancelReason

  eventoID: ID! @index(name: "byEvento")
  usuarioID: ID! @index(name: "byUsuario")

  organizadorID: ID
}

enum reservaCancelReason {
  EVENTOCERRADO
  CANCELADOPORCLIENTE
}

enum placeEnum {
  EXTERIOR
  INTERIOR
}

enum musicEnum {
  REGGETON
  POP
  TECNO
  RAP
  BANDA
  ROCK
  OTRO
}

enum comoditiesEnum {
  DJ
  ALBERCA
  BARRALIBRE
  COMIDA
  SEGURIDAD
}
